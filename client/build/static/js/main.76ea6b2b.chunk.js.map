{"version":3,"sources":["assets/devdash.svg","contexts/UserContext.jsx","components/LoggedButton.jsx","components/Header.jsx","App.jsx","index.js"],"names":["module","exports","UserContext","createContext","UserContextProvider","props","useState","user","setUser","setMessage","Provider","value","fetchUser","fetch","method","credentials","headers","accepts","then","response","status","json","responseJson","message","handleLogin","window","open","handleLogout","handleRedirect","to","children","LoggedButton","useContext","useEffect","onClick","Time","styled","h1","Header","d","Date","getHours","getMinutes","Container","div","background","App","setBackground","useCookies","setCookies","cookie","Cookies","backgroundURL","get","tomorrow","setDate","getDate","undefined","url","expires","getBackground","className","ReactDOM","render","CookiesProvider","document","getElementById"],"mappings":"kKAAAA,EAAOC,QAAU,IAA0B,qC,kHCG9BC,EAAcC,0BAsDZC,EApDa,SAAAC,GAAU,IAAD,EACXC,qBADW,mBAC5BC,EAD4B,KACtBC,EADsB,OAELF,qBAFK,mBAEnBG,GAFmB,WAqCnC,OACE,kBAACP,EAAYQ,SAAb,CACEC,MAAO,CACLJ,OACAK,UArCY,WAChBC,MAAM,sBAAuB,CAC3BC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,QAAS,mBACT,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAAAC,GACJ,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,UAE9CH,MAAK,SAAAI,GACAA,IACFb,EAAWa,EAAaC,SACxBf,EAAQc,EAAaf,WAsBvBiB,YAjBc,WAClBC,OAAOC,KAAK,qBAAsB,UAiB9BC,aAde,WACnBF,OAAOC,KAAK,eAAgB,UAcxBE,eAXiB,WACrB,OAAO,kBAAC,IAAD,CAAUC,GAAG,SAajBxB,EAAMyB,WC9BEC,EAnBM,WAAO,IAAD,EAC8BC,qBACrD9B,GADMK,EADiB,EACjBA,KAAMK,EADW,EACXA,UAAWY,EADA,EACAA,YAAaG,EADb,EACaA,aAetC,OAXAM,qBAAU,WACRrB,MACC,IAGCL,EACI,4BAAQ2B,QAASP,GAAjB,UAEA,4BAAQO,QAASV,GAAjB,U,4ICZV,IAOMW,EAAOC,IAAOC,GAAV,KAKKC,EAZA,WACIN,qBAAW9B,GAApBK,KADY,IAEdgC,EAAI,IAAIC,KAEd,OAAO,kBAACL,EAAD,KAAOI,EAAEE,WAAa,MAAQF,EAAEG,e,keC+CzC,IAAMC,EAAYP,IAAOQ,IAAV,KAGY,SAAAvC,GAAK,OAAIA,EAAMwC,cAsB3BC,EAtEf,WAAgB,IAAD,EACuBxC,qBADvB,mBACNuC,EADM,KACME,EADN,OAEgCC,YAAW,CAAC,eAF5C,mBAEGC,GAFH,WAGPC,GAHO,KAGE,IAAIC,KAwBnB,OAJAlB,qBAAU,YAlBY,WACpB,IAAMmB,EAAgBF,EAAOG,IAAI,qBAC3BC,EAAW,IAAId,KACrBc,EAASC,SAAQ,IAAIf,MAAOgB,UAAY,QAClBC,IAAlBL,EACFL,EAAcK,GAEdvC,MAAM,0DAA0DK,MAC9D,SAAA2B,GACEE,EAAcF,EAAWa,KACzBT,EAAW,oBAAqBJ,EAAWa,IAAK,CAC9CC,QAASL,OAQjBM,KACC,IAGD,kBAAC,EAAD,KACE,kBAACjB,EAAD,CAAWE,WAAYA,GACrB,yBAAKgB,UAAU,aACb,6BACE,mDAGJ,yBAAKA,UAAU,cACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,eACf,kBAAC,EAAD,S,QC3CRC,IAASC,OACP,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.76ea6b2b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/devdash.6c365d04.svg\";","import React, { createContext, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = props => {\r\n  const [user, setUser] = useState();\r\n  const [message, setMessage] = useState();\r\n\r\n  const fetchUser = () => {\r\n    fetch(\"/auth/login/success\", {\r\n      method: \"GET\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        accepts: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Credentials\": true\r\n      }\r\n    })\r\n      .then(response => {\r\n        if (response.status === 200) return response.json();\r\n      })\r\n      .then(responseJson => {\r\n        if (responseJson) {\r\n          setMessage(responseJson.message);\r\n          setUser(responseJson.user);\r\n        }\r\n      });\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    window.open(\"/auth/login/google\", \"_self\");\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    window.open(\"/auth/logout\", \"_self\");\r\n  };\r\n\r\n  const handleRedirect = () => {\r\n    return <Redirect to=\"/\" />;\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        user,\r\n        fetchUser,\r\n        handleLogin,\r\n        handleLogout,\r\n        handleRedirect\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\n\r\nconst LoggedButton = () => {\r\n  const { user, fetchUser, handleLogin, handleLogout } = useContext(\r\n    UserContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  let btn;\r\n  if (user) {\r\n    btn = <button onClick={handleLogout}>Logout</button>;\r\n  } else {\r\n    btn = <button onClick={handleLogin}>Login</button>;\r\n  }\r\n\r\n  return btn;\r\n};\r\n\r\nexport default LoggedButton;\r\n","import React, { useContext } from \"react\";\r\nimport { UserContext } from \"../contexts/UserContext\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = () => {\r\n  const { user } = useContext(UserContext);\r\n  const d = new Date();\r\n\r\n  return <Time>{d.getHours() + \" : \" + d.getMinutes()}</Time>;\r\n};\r\n\r\nconst Time = styled.h1`\r\n  color: white;\r\n  font-size: 100px;\r\n`;\r\n\r\nexport default Header;\r\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\nimport UserContextProvider from \"./contexts/UserContext\";\nimport LoggedButton from \"./components/LoggedButton\";\nimport styled from \"styled-components\";\nimport logo from \"./assets/devdash.svg\";\nimport { useCookies, Cookies } from \"react-cookie\";\nimport Header from \"./components/Header\";\n\nfunction App() {\n  const [background, setBackground] = useState();\n  const [cookies, setCookies, removeCookies] = useCookies([\"background\"]);\n  const cookie = new Cookies();\n\n  const getBackground = () => {\n    const backgroundURL = cookie.get(\"background-cookie\");\n    const tomorrow = new Date();\n    tomorrow.setDate(new Date().getDate() + 1);\n    if (backgroundURL !== undefined) {\n      setBackground(backgroundURL);\n    } else {\n      fetch(\"https://source.unsplash.com/1600x900/?background,relax\").then(\n        background => {\n          setBackground(background.url);\n          setCookies(\"background-cookie\", background.url, {\n            expires: tomorrow\n          });\n        }\n      );\n    }\n  };\n\n  useEffect(() => {\n    getBackground();\n  }, []);\n\n  return (\n    <UserContextProvider>\n      <Container background={background}>\n        <div className=\"upper-row\">\n          <div>\n            <p>Read some dev news</p>\n          </div>\n        </div>\n        <div className=\"middle-row\">\n          <Header />\n        </div>\n        <div className=\"bottom-row\"></div>\n        <LoggedButton />\n      </Container>\n    </UserContextProvider>\n  );\n}\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  background-image: url('${props => props.background}');\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  font-family: 'Teko', sans-serif;\n  .upper-row {\n    width: 90%;\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 10px;\n    img {\n      opacity: 0.8;\n    }\n    p {\n\n      color: white;\n      font-size: 25px;\n      cursor: pointer;\n    }\n  }\n`;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { CookiesProvider } from \"react-cookie\";\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}